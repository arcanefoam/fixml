[%

operation valueFor( instance : Instance, attribute : Attribute ) : String {
	for ( value in instance.values ) {
		if ( value.attribute == attribute) {
		   	return value.text;
		}
	}
	return "null";
}

operation Instance declaration( prefix : String  ) {
  
	var selfname : String = prefix + self.name;
  	  	
  %][%= self.clazz.name %] [%= selfname %]= new [%= self.clazz.name %]([%= self.clazz.attributes.collect( attr | '"' + valueFor( self, attr ) + '"').concat(', ') %]);
  [% 
  	for ( instance in self.children ) {
  		instance.declaration( selfname + '_' );
  		%][%= selfname %].add[%=instance.clazz.name%]( [%= selfname + '_'+ instance.name %] );
  		
  		[%  
  	} 	
} 		

operation Instance initialization( prefix : String  ) {
  
	var selfname : String = prefix + self.name;
  	  	
  %][%= self.clazz.attributes.collect( attr | 'this.' + attr.name + ' = "' + valueFor( self, attr ) + '"').concat(';\n') %];
  
  [% 
  	for ( instance in self.children ) {
  		instance.declaration( selfname + '_' );
  		%]this.add[%=instance.clazz.name%]( [%= selfname + '_'+ instance.name %] );
  		
  		[%  
  	} 	
} 	


operation Clazz initialization2( prefix : String  ) {
  
		var cont: Integer = 1;
		var parametersName : String = "";
	
		for (instance in self.instances ) {
		
			parametersName = parametersName + "\n\n\t\t" + self.name + self.name + "_" + cont + "= new" + self.name + "(";

			parametersName = parametersName + self.attributes.collect( att | valueFor2(instance,att)).concat(',');
					
			for (subClazz in self.clazzes ) {
				parametersName = parametersName + subClazz.initialization2SubClazz(subClazz);
			}
			parametersName = parametersName + ");";
			cont = cont+1;
		}
		
		%][%=parametersName%][%		
} 	


operation Clazz initialization2SubClazz( subClazz : Clazz  ) : String {
 			
	var parametersName: String = "\n\t\t\t\t, new " + subClazz.name + "(";
				
	for (instance in subClazz.instances ){	
	
		parametersName = parametersName + self.attributes.collect( att | '"' + valueFor(instance,att) + '"').concat(',');
	
		for (subSubClazz in subClazz.clazzes ) {
			parametersName = subSubClazz.initialization2SubClazz(subSubClazz);
		}				
		parametersName = parametersName + ")";
	
	}	
	return parametersName;
} 	

operation valueFor2( instance : Instance, attribute : Attribute ) : String {
	for ( value in instance.values ) {
		if ( value.attribute == attribute) {
			if(value.text == null)
		   		return value.text;
		   	else
		   		return "\"" + value.text + "\""; 
		}
	}
	return "null";
}

%]