[%
  import 'toJavaUtils.egl';
%]package [%= objectModel.getAliases().first %];

[% if( clazz.clazzes.size > 0 ) { %]
import java.util.List;
import java.util.ArrayList;[% } %]
[*- var attributeString = clazz.attributes.collect(a|"String " + a.name).concat(", "); *]

// Class for tag [%= clazz.name %]
public class [%= clazz.name %] {

[% for (attribute in clazz.attributes ) { %]
  String [%= attribute.name  %];
[% } %]

[% for (subclazz in clazz.clazzes) { %]
  List<[%= subclazz.name %]> [%= subclazz.name %]s = new ArrayList<[%= subclazz.name %]>();
[% } %]

  // default constructor
  public [%= clazz.name %] ( [%= clazz.attributes.collect(a|"String " + a.name).concat(", ") %] ) {
  [% for (attribute in clazz.attributes ) { %]
    this.[%= attribute.name  %] = [%= attribute.name  %];
  [% } %]  
  }

[*- [% if (Model.allInstances.first().clazzes.first() == clazz) { %] 
    We can shortcut because we are using EMF-based models            *]
[% if ( clazz.eContainer().isTypeOf( Model ) ) { %][% } %]
  public [%= clazz.name %] ( ) {   
  
    [% 
      var firstInstance : Instance = clazz.instances.first; 
      firstInstance.initialization( '' ); 
    %]
  }
      
[% for (subclazz in clazz.clazzes) { %]
  public void add[%= subclazz.name %]( [%= subclazz.name %] child ) {
    this.[%= subclazz.name %]s.add( child );
  }
[% } %]

} 